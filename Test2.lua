-- –ó–∞–≥—Ä—É–∑–∫–∞ WindUI
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
local Window = WindUI:CreateWindow({
    Title = "üí´ NovaAxis",
    Icon = "sparkles", -- lucide icon. optional
    Author = "NovaAxis", -- optional
    BackgroundImageTransparency = 0.45,
    User = {
        Enabled = true,
        Anonymous = false,
    },
})

-- –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è
Window:EditOpenButton({
    Title = "üí´ NovaAxis",
    Icon = "sparkles",
    CornerRadius = UDim.new(0, 16),
    StrokeThickness = 2,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

-- –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ "Main"
local Tab = Window:Tab({
    Title = "Main",
    Icon = "sparkles", -- optional
    Locked = false,
})

-- –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –≤–∫–ª–∞–¥–∫–∏ "Main"
local ElementsSection = Tab:Section({
    Title = "Elements",
    Size = UDim2.new(1, 0, 0, 300) -- –†–∞–∑–º–µ—Ä —Å–µ–∫—Ü–∏–∏
})

-- –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –∫–æ–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ Roblox
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è UI, –ø—Ä–∏–Ω–∏–º–∞—é—â–∞—è ElementsSection (WindUI)
local function CreateUI(ElementsSection)
    -- –í–∫–ª–∞–¥–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    local InputTab = ElementsSection:Tab({
        Title = "Input",
        Icon = "text-cursor-input",
    })

    -- –ü–æ–ª–µ –≤–≤–æ–¥–∞ (–æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ)
    InputTab:Input({
        Title = "Input",
        Icon = "mouse",
        Placeholder = "Enter text",
        Type = "Text",
        Callback = function(value)
            print("Input value: " .. tostring(value))
        end
    })

    InputTab:Space()

    -- –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ (Textarea)
    InputTab:Input({
        Title = "Input Textarea",
        Type = "Textarea",
        Icon = "mouse",
        Placeholder = "Enter longer text",
        Callback = function(value)
            print("Textarea value: " .. tostring(value))
        end
    })

    InputTab:Space()

    -- –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –±–µ–∑ –∏–∫–æ–Ω–∫–∏
    InputTab:Input({
        Title = "Input Textarea",
        Type = "Textarea",
        Placeholder = "Enter longer text",
        Callback = function(value)
            print("Textarea (no icon) value: " .. tostring(value))
        end
    })

    InputTab:Space()

    -- –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
    InputTab:Input({
        Title = "Input",
        Desc = "Input example",
        Type = "Text",
        Placeholder = "Enter text",
        Callback = function(value)
            print("Input with desc value: " .. tostring(value))
        end
    })

    InputTab:Space()

    -- –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
    InputTab:Input({
        Title = "Input Textarea",
        Desc = "Input example",
        Type = "Textarea",
        Placeholder = "Enter longer text",
        Callback = function(value)
            print("Textarea with desc value: " .. tostring(value))
        end
    })

    InputTab:Space()

    -- –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    InputTab:Input({
        Title = "Input",
        Type = "Text",
        Locked = true,
        Placeholder = "Locked input",
        Callback = function(value)
            print("Locked input value: " .. tostring(value)) -- –ù–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ Locked = true
        end
    })

    InputTab:Space()

    -- –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
    InputTab:Input({
        Title = "Input",
        Desc = "Input example",
        Type = "Text",
        Locked = true,
        Placeholder = "Locked input",
        Callback = function(value)
            print("Locked input with desc value: " .. tostring(value)) -- –ù–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ Locked = true
        end
    })

    -- –í–∫–ª–∞–¥–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã –∏ –∫–Ω–æ–ø–∫–∏
    local MoneyTab = ElementsSection:Tab({
        Title = "Money Claim",
        Icon = "currency-dollar",
    })

    -- –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è –≤–≤–æ–¥–∞
    local currentMoneyValue = 100000 -- –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    -- –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è —Å—É–º–º—ã –¥–µ–Ω–µ–≥ (–∑–∞–º–µ–Ω–∞ —Å–ª–∞–π–¥–µ—Ä–∞)
    local MoneyInput = MoneyTab:Input({
        Title = "Money Amount",
        Desc = "Enter amount",
        Type = "Text", -- WindUI –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Type = "Number", –∏—Å–ø–æ–ª—å–∑—É–µ–º Text —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
        Placeholder = "Enter amount (100000 to 1000000000000)",
        Callback = function(value)
            local numValue = tonumber(value)
            if numValue then
                if numValue >= 100000 and numValue <= 1000000000000 then
                    currentMoneyValue = numValue
                    print("Money Input value: " .. tostring(numValue))
                else
                    print("Input out of range: " .. tostring(value))
                end
            else
                print("Invalid input: " .. tostring(value))
            end
        end
    })

    MoneyTab:Space()

    -- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    local Button = MoneyTab:Button({
        Title = "Claim Money",
        Desc = "Claim amount",
        Locked = false,
        Callback = function()
            -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ Callback
            print("Button clicked, value: " .. tostring(currentMoneyValue))

            -- –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
            if not currentMoneyValue then
                warn("Invalid value: no valid number entered")
                return
            end
            if currentMoneyValue < 100000 or currentMoneyValue > 1000000000000 then
                warn("Invalid value: must be between 100000 and 1000000000000")
                return
            end

            -- –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            local success, err = pcall(function()
                local remote = ReplicatedStorage:FindFirstChild("ClaimReward")
                if not remote then
                    error("ClaimReward RemoteEvent not found in ReplicatedStorage")
                end
                if not remote:IsA("RemoteEvent") then
                    error("ClaimReward is not a RemoteEvent")
                end
                print("Sending to server: Money, " .. tostring(currentMoneyValue))
                remote:FireServer("Money", currentMoneyValue)
            end)

            if success then
                print("Successfully sent to server: Money, " .. tostring(currentMoneyValue))
                MoneyTab:Notify({ -- –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ WindUI –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç
                    Title = "Success",
                    Desc = "Claimed " .. tostring(currentMoneyValue)
                })
            else
                warn("Failed to send to server: " .. tostring(err))
                MoneyTab:Notify({
                    Title = "Error",
                    Desc = tostring(err)
                })
            end
        end
    })
end

-- –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ CreateUI —Å ElementsSection
CreateUI(ElementsSection)
